// Mocks generated by Mockito 5.4.6 from annotations
// in porrot_2025/test/domain/usecases/calculate_scores_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:porrot_2025/domain/entities/gala.dart' as _i5;
import 'package:porrot_2025/domain/entities/prediction.dart' as _i8;
import 'package:porrot_2025/domain/entities/user.dart' as _i2;
import 'package:porrot_2025/domain/repositories/gala_repository.dart' as _i3;
import 'package:porrot_2025/domain/repositories/prediction_repository.dart'
    as _i7;
import 'package:porrot_2025/domain/repositories/user_repository.dart' as _i9;
import 'package:porrot_2025/domain/services/score_calculator.dart' as _i10;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeUser_0 extends _i1.SmartFake implements _i2.User {
  _FakeUser_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GalaRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockGalaRepository extends _i1.Mock implements _i3.GalaRepository {
  MockGalaRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<String> createGala(_i5.Gala? gala) =>
      (super.noSuchMethod(
            Invocation.method(#createGala, [gala]),
            returnValue: _i4.Future<String>.value(
              _i6.dummyValue<String>(
                this,
                Invocation.method(#createGala, [gala]),
              ),
            ),
          )
          as _i4.Future<String>);

  @override
  _i4.Future<void> updateGala(_i5.Gala? gala) =>
      (super.noSuchMethod(
            Invocation.method(#updateGala, [gala]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<void> updateGalaNominees(
    String? galaId,
    List<String>? nominatedContestantIds,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateGalaNominees, [
              galaId,
              nominatedContestantIds,
            ]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<List<_i5.Gala>> getAllGalas() =>
      (super.noSuchMethod(
            Invocation.method(#getAllGalas, []),
            returnValue: _i4.Future<List<_i5.Gala>>.value(<_i5.Gala>[]),
          )
          as _i4.Future<List<_i5.Gala>>);

  @override
  _i4.Future<_i5.Gala?> getGalaById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getGalaById, [id]),
            returnValue: _i4.Future<_i5.Gala?>.value(),
          )
          as _i4.Future<_i5.Gala?>);
}

/// A class which mocks [PredictionRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockPredictionRepository extends _i1.Mock
    implements _i7.PredictionRepository {
  MockPredictionRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> savePrediction(_i8.Prediction? prediction) =>
      (super.noSuchMethod(
            Invocation.method(#savePrediction, [prediction]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  _i4.Future<_i8.Prediction?> getPredictionForGala(
    String? userId,
    String? galaId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getPredictionForGala, [userId, galaId]),
            returnValue: _i4.Future<_i8.Prediction?>.value(),
          )
          as _i4.Future<_i8.Prediction?>);

  @override
  _i4.Future<List<_i8.Prediction>> getPredictionsForGala(String? galaId) =>
      (super.noSuchMethod(
            Invocation.method(#getPredictionsForGala, [galaId]),
            returnValue: _i4.Future<List<_i8.Prediction>>.value(
              <_i8.Prediction>[],
            ),
          )
          as _i4.Future<List<_i8.Prediction>>);

  @override
  _i4.Future<int> getPredictionCountForGala(String? galaId) =>
      (super.noSuchMethod(
            Invocation.method(#getPredictionCountForGala, [galaId]),
            returnValue: _i4.Future<int>.value(0),
          )
          as _i4.Future<int>);
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i9.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.User> createUser({required String? displayName}) =>
      (super.noSuchMethod(
            Invocation.method(#createUser, [], {#displayName: displayName}),
            returnValue: _i4.Future<_i2.User>.value(
              _FakeUser_0(
                this,
                Invocation.method(#createUser, [], {#displayName: displayName}),
              ),
            ),
          )
          as _i4.Future<_i2.User>);

  @override
  _i4.Future<List<_i2.User>> getUsers() =>
      (super.noSuchMethod(
            Invocation.method(#getUsers, []),
            returnValue: _i4.Future<List<_i2.User>>.value(<_i2.User>[]),
          )
          as _i4.Future<List<_i2.User>>);

  @override
  _i4.Future<_i2.User?> getUserById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getUserById, [id]),
            returnValue: _i4.Future<_i2.User?>.value(),
          )
          as _i4.Future<_i2.User?>);

  @override
  _i4.Future<void> updateUser(_i2.User? user) =>
      (super.noSuchMethod(
            Invocation.method(#updateUser, [user]),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);
}

/// A class which mocks [ScoreCalculator].
///
/// See the documentation for Mockito's code generation for more information.
class MockScoreCalculator extends _i1.Mock implements _i10.ScoreCalculator {
  MockScoreCalculator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, dynamic> calculateScore(
    _i8.Prediction? prediction,
    _i5.Gala? gala,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#calculateScore, [prediction, gala]),
            returnValue: <String, dynamic>{},
          )
          as Map<String, dynamic>);
}
